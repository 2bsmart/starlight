from "utils/pack/bool/nonStrictUnpack256.zok" import main as field_to_bool_256
from "utils/pack/u32/unpack256ToBits.zok" import main as u32_8_to_bool_256
from "utils/pack/u32/nonStrictUnpack256.zok" import main as field_to_u32_8
from "./common/hashes/sha256/pad1024ThenHash.zok" import main as sha256of1024

def main(\
	private field param1,\
	private u32[8] a_0_stateVarId,\
	private u32[8] a_0_newCommitment_owner_publicKey,\
	private u32[8] a_0_newCommitment_salt,\
	public field a_0_newCommitment_commitment\
) -> ():

      
          // The below represents the incrementation 'a = a + param1':

          field a_0 = param1

	
          // prepare secret state 'a_0' for commitment

          u32[8] a_0_newCommitment_value = field_to_u32_8(a_0)

          // a_0_newCommitment_commitment - preimage check

        	u32[8] a_0_newCommitment_commitment_check = sha256of1024([\
            ...a_0_stateVarId,\
            ...a_0_newCommitment_value,\
            ...a_0_newCommitment_owner_publicKey,\
            ...a_0_newCommitment_salt\
          ])

          assert(\
            field_to_bool_256(a_0_newCommitment_commitment)[8..256] == u32_8_to_bool_256(a_0_newCommitment_commitment_check)[8..256]\
          )

      return
      
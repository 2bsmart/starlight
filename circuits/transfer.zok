from "utils/pack/u32/nonStrictUnpack256.zok" import main as field_to_u32_8
from "./common/hashes/mimc/altbn254/mimc2.zok" import main as mimc2
from "./common/hashes/sha256/pad256ThenHash.zok" import main as sha256of256
from "utils/pack/bool/nonStrictUnpack256.zok" import main as field_to_bool_256
from "utils/pack/u32/unpack256ToBits.zok" import main as u32_8_to_bool_256
from "./common/hashes/sha256/pad768ThenHash.zok" import main as sha256of768
from "./common/hashes/sha256/pad1024ThenHash.zok" import main as sha256of1024
from "utils/pack/bool/pack256.zok" import main as bool_256_to_field
from "./common/merkle-tree/mimc/altbn254/verify-membership/height32.zok" import main as checkRoot

def main(\
	private field recipient,\
	private field amount,\
	private field msg,\
	private u32[8] balances_msg_0_oldCommitment_owner_secretKey,\
	private u32[8] balances_msg_1_oldCommitment_owner_secretKey,\
	public field balances_msg_0_oldCommitment_nullifier,\
	public field balances_msg_1_oldCommitment_nullifier,\
	private field balances_msg_0_oldCommitment_value,\
	private u32[8] balances_msg_0_oldCommitment_salt,\
	private field balances_msg_1_oldCommitment_value,\
	private u32[8] balances_msg_1_oldCommitment_salt,\
	public field commitmentRoot,\
	private field balances_msg_0_oldCommitment_membershipWitness_index,\
	private field[32] balances_msg_0_oldCommitment_membershipWitness_siblingPath,\
	private field balances_msg_1_oldCommitment_membershipWitness_index,\
	private field[32] balances_msg_1_oldCommitment_membershipWitness_siblingPath,\
	private u32[8] balances_msg_2_newCommitment_owner_publicKey,\
	private u32[8] balances_msg_2_newCommitment_salt,\
	public field balances_msg_2_newCommitment_commitment,\
	private u32[8] balances_recipient_0_newCommitment_owner_publicKey,\
	private u32[8] balances_recipient_0_newCommitment_salt,\
	public field balances_recipient_0_newCommitment_commitment\
) -> ():

      
          // We need to hard-code the mappingId's of mappings into the circuit:
          field balances_mappingId = 8

	
          field balances_msg_0 = balances_msg_0_oldCommitment_value

	
          field balances_msg_1 = balances_msg_1_oldCommitment_value

	
          // The below represents the decrementation 'balances_msg = balances_msg - amount':

          assert(balances_msg_0 + balances_msg_1 > amount)
          // TODO: assert no under/overflows

          field balances_msg_2 = (balances_msg_0 + balances_msg_1) - amount

	
          // The below represents the incrementation 'balances_recipient = balances_recipient + amount':

          field balances_recipient_0 = amount

	
          field balances_msg_0_stateVarId_field = mimc2([balances_mappingId, msg])

	
          u32[8] balances_msg_0_stateVarId = field_to_u32_8(balances_msg_0_stateVarId_field)

	
          field balances_msg_1_stateVarId_field = mimc2([balances_mappingId, msg])

	
          u32[8] balances_msg_1_stateVarId = field_to_u32_8(balances_msg_1_stateVarId_field)

	
          field balances_msg_2_stateVarId_field = mimc2([balances_mappingId, msg])

	
          u32[8] balances_msg_2_stateVarId = field_to_u32_8(balances_msg_2_stateVarId_field)

	
          // balances_msg_0_oldCommitment - PoKoSK:
          // The correctness of this secret key will be constrained within the oldCommitment existence check.

          u32[8] balances_msg_0_oldCommitment_owner_publicKey = sha256of256([...balances_msg_0_oldCommitment_owner_secretKey])

	
          // balances_msg_1_oldCommitment - PoKoSK:
          // The correctness of this secret key will be constrained within the oldCommitment existence check.

          u32[8] balances_msg_1_oldCommitment_owner_publicKey = sha256of256([...balances_msg_1_oldCommitment_owner_secretKey])

	
          // Nullify balances_msg_0:

          u32[8] balances_msg_0_oldCommitment_nullifier_check = sha256of768([\
            ...balances_msg_0_stateVarId,\
            ...balances_msg_0_oldCommitment_owner_secretKey,\
            ...balances_msg_0_oldCommitment_salt\
          ])

          assert(\
            field_to_bool_256(balances_msg_0_oldCommitment_nullifier)[8..256] == u32_8_to_bool_256(balances_msg_0_oldCommitment_nullifier_check)[8..256]\
          )

	
          // Nullify balances_msg_1:

          u32[8] balances_msg_1_oldCommitment_nullifier_check = sha256of768([\
            ...balances_msg_1_stateVarId,\
            ...balances_msg_1_oldCommitment_owner_secretKey,\
            ...balances_msg_1_oldCommitment_salt\
          ])

          assert(\
            field_to_bool_256(balances_msg_1_oldCommitment_nullifier)[8..256] == u32_8_to_bool_256(balances_msg_1_oldCommitment_nullifier_check)[8..256]\
          )

	
          // balances_msg_0_oldCommitment_commitment: preimage check

          u32[8] balances_msg_0_oldCommitment_commitment = sha256of1024([\
            ...balances_msg_0_stateVarId,\
            ...field_to_u32_8(balances_msg_0_oldCommitment_value),\
            ...balances_msg_0_oldCommitment_owner_publicKey,\
            ...balances_msg_0_oldCommitment_salt\
          ])

	
          // balances_msg_1_oldCommitment_commitment: preimage check

          u32[8] balances_msg_1_oldCommitment_commitment = sha256of1024([\
            ...balances_msg_1_stateVarId,\
            ...field_to_u32_8(balances_msg_1_oldCommitment_value),\
            ...balances_msg_1_oldCommitment_owner_publicKey,\
            ...balances_msg_1_oldCommitment_salt\
          ])

	
          // balances_msg_0_oldCommitment_commitment: existence check

	
          field balances_msg_0_oldCommitment_commitment_truncated = bool_256_to_field([...[false; 8], ...u32_8_to_bool_256(balances_msg_0_oldCommitment_commitment)[8..256]])

	
          field balances_msg_0_commitmentRoot_check = checkRoot(\
            balances_msg_0_oldCommitment_membershipWitness_siblingPath,\
            balances_msg_0_oldCommitment_commitment_truncated,\
            balances_msg_0_oldCommitment_membershipWitness_index\
          )

	
          assert(\
            field_to_bool_256(commitmentRoot)[8..256] == field_to_bool_256(balances_msg_0_commitmentRoot_check)[8..256]\
          )

	
          // balances_msg_1_oldCommitment_commitment: existence check

	
          field balances_msg_1_oldCommitment_commitment_truncated = bool_256_to_field([...[false; 8], ...u32_8_to_bool_256(balances_msg_1_oldCommitment_commitment)[8..256]])

	
          field balances_msg_1_commitmentRoot_check = checkRoot(\
            balances_msg_1_oldCommitment_membershipWitness_siblingPath,\
            balances_msg_1_oldCommitment_commitment_truncated,\
            balances_msg_1_oldCommitment_membershipWitness_index\
          )

	
          assert(\
            field_to_bool_256(commitmentRoot)[8..256] == field_to_bool_256(balances_msg_1_commitmentRoot_check)[8..256]\
          )

	
          // prepare secret state 'balances_msg_2' for commitment

          u32[8] balances_msg_2_newCommitment_value = field_to_u32_8(balances_msg_2)

          // balances_msg_2_newCommitment_commitment - preimage check

          u32[8] balances_msg_2_newCommitment_commitment_check = sha256of1024([\
            ...balances_msg_2_stateVarId,\
            ...balances_msg_2_newCommitment_value,\
            ...balances_msg_2_newCommitment_owner_publicKey,\
            ...balances_msg_2_newCommitment_salt\
          ])

          assert(\
            field_to_bool_256(balances_msg_2_newCommitment_commitment)[8..256] == u32_8_to_bool_256(balances_msg_2_newCommitment_commitment_check)[8..256]\
          )

	
          field balances_recipient_0_stateVarId_field = mimc2([balances_mappingId, recipient])

	
          u32[8] balances_recipient_0_stateVarId = field_to_u32_8(balances_recipient_0_stateVarId_field)

	
          // prepare secret state 'balances_recipient_0' for commitment

          u32[8] balances_recipient_0_newCommitment_value = field_to_u32_8(balances_recipient_0)

          // balances_recipient_0_newCommitment_commitment - preimage check

          u32[8] balances_recipient_0_newCommitment_commitment_check = sha256of1024([\
            ...balances_recipient_0_stateVarId,\
            ...balances_recipient_0_newCommitment_value,\
            ...balances_recipient_0_newCommitment_owner_publicKey,\
            ...balances_recipient_0_newCommitment_salt\
          ])

          assert(\
            field_to_bool_256(balances_recipient_0_newCommitment_commitment)[8..256] == u32_8_to_bool_256(balances_recipient_0_newCommitment_commitment_check)[8..256]\
          )

      return
      